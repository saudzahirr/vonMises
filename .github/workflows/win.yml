name: Windows Build and Test

on:
  push:
    branches: 
      - master
      - Fix-ci/cd-pipeline
  pull_request:
    branches: 
      - master
      - Fix-ci/cd-pipeline

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Miniconda
      uses: conda-incubator/setup-miniconda@v2

    - name: Create Environment
      run: conda env create -f environment.yml

    - name: Build
      run: |
        conda activate vm
        python install.py install
        pip install dist\*
        type build.log
        vonMises -m test\test-data\MATRIX.mat -k A

    - name: Unittest
      run: |
        conda activate vm
        pytest -s test\unit-test

    - name: Code Lint
      run: |
        conda activate vm
        ruff version
        ruff format --check .
        ruff check --output-format=github .

    - name: Archive VM Environment
      run: |
        tar -czf vm-env.tar.gz $CONDA_PREFIX
      continue-on-error: true
      if: always()
      # Store VM environment as an artifact
      - name: Upload VM Environment
        uses: actions/upload-artifact@v3
        with:
          name: vm-environment
          path: vm-env.tar.gz

    - name: Archive Source Directory
      run: |
        tar -czf source-dir.tar.gz .
      continue-on-error: true
      if: always()
      # Store Source Directory as an artifact
      - name: Upload Source Directory
        uses: actions/upload-artifact@v3
        with:
          name: source-directory
          path: source-dir.tar.gz
